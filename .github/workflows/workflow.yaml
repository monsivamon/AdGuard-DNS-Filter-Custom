name: Build Filter & modify

on:
  push:
  schedule:
    - cron: '0 */6 * * *' # Every 6th hour
  workflow_dispatch:

env:
  NODE_VERSION: 18.x

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          
      - name: Get Latest File
        run: |
          # 公式フィルタを取得
          curl -sSfL https://raw.githubusercontent.com/AdguardTeam/AdGuardSDNSFilter/master/Filters/exclusions.txt -o Filters/exclusions.txt
          curl -sSfL https://raw.githubusercontent.com/AdguardTeam/AdGuardSDNSFilter/master/Filters/exceptions.txt -o Filters/exceptions.txt
          curl -sSfL https://raw.githubusercontent.com/AdguardTeam/AdGuardSDNSFilter/master/Filters/rules.txt -o Filters/rules.txt
          # Yuki2718氏のフィルタも取得
          curl -sSfL https://raw.githubusercontent.com/Yuki2718/adblock2/main/japanese/dns-unbreak.txt -o Filters/dns-unbreak.txt

      # フィルタビルド実行
      - name: yarn
        run: |
          yarn install
          yarn run build

      - name: Clean up main_filter.txt
        run: |
          # 元ファイルをバックアップ
          cp Filters/main_filter.txt Filters/before_modify.txt

          # ヘッダ部分（2〜7行目）を抽出
          sed -n '2,7p' Filters/main_filter.txt > Filters/tmp_head.txt

          # ヘッダー以外を整理整頓
          awk '
          # ステップ 1: コメント＆使えない行除去
          !/^!/ && (/^\|\||^@@/) {
            # ステップ 2: 不要修飾子を除去 ($important以外の$修飾子)
            if ($0 ~ /\$.*$/ && $0 !~ /\$important$/) {
              sub(/\$.*$/, "", $0)
            }
            # ステップ 3: tracking関連の除外（@@以外の行でtracking系を除外）
            if ($0 ~ /^@@/ || $0 !~ /tracking|tracker|analytics/) {
              # ステップ 4: 重複してないことを確認
              if (!seen[$0]++) {
                print
              }
            }
          }
          ' Filters/main_filter.txt >> Filters/tmp_head.txt
          
          # 上書き実行
          mv Filters/tmp_head.txt Filters/main_filter.txt
          
      - name: Insert Version info in JST
        run: |
          # 現在の日付と時間をJST形式で取得
          VERSION_LINE="! Version: $(TZ=Asia/Tokyo date '+%Y-%m-%d %H:%M JST')"
          
          # ファイル内で「! Description:」行の直後にバージョン情報を挿入
          awk -v ver="$VERSION_LINE" '
          /^! Description:/ { 
            print; 
            print ver; 
            next
          }
          { 
            print 
          }
          ' Filters/main_filter.txt > Filters/tmp_main.txt

          # 上書き実行
          mv Filters/tmp_main.txt Filters/main_filter.txt
          
      # フィルタをアップロード
      - name: Upload new filter
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add Filters/*.txt
          git commit -m "Updated filter successfully generated."
          git push origin master
