name: Build AdGuard DNS filter

on:
  push:
  schedule:
    - cron: '0 */6 * * *' # Every 6th hour
  workflow_dispatch:

env:
  NODE_VERSION: 18.x

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          
      - name: Get Latest File
        run: |
          curl -sSfL https://raw.githubusercontent.com/AdguardTeam/AdGuardSDNSFilter/master/Filters/exclusions.txt -o Filters/exclusions.txt
          curl -sSfL https://raw.githubusercontent.com/AdguardTeam/AdGuardSDNSFilter/master/Filters/exceptions.txt -o Filters/exceptions.txt
          curl -sSfL https://raw.githubusercontent.com/AdguardTeam/AdGuardSDNSFilter/master/Filters/rules.txt -o Filters/rules.txt
          curl -sSfL https://raw.githubusercontent.com/Yuki2718/adblock2/main/japanese/dns-unbreak.txt -o Filters/dns-unbreak.txt
          
      - name: yarn
        run: |
          yarn install
          yarn run build

      - name: Clean up main_filter.txt
        run: |
          # 元ファイルをバックアップ
          cp Filters/main_filter.txt Filters/main_filter_bak.txt

          # ヘッダ部分（2〜7行目）を抽出
          sed -n '2,7p' Filters/main_filter.txt > Filters/tmp_head.txt

          # 本体部分（11行目以降）を抽出
          tail -n +11 Filters/main_filter.txt > Filters/tmp_body_raw.txt

          # 以下の条件で整形（コメント除去、正規のルールのみ抽出、$付きの修飾子除去（ただし$importantは残す）、tracking系ワード除外）
          awk '
            !/^\!/ && (/^\|\||^@@/) {
              if ($0 ~ /\$.*$/ && $0 !~ /\$important$/) {
                sub(/\$.*$/, "", $0);
                if ($0 !~ /tracking|tracker|analytics/) {
                  print
                }
              }
            }
           ' Filters/tmp_body_raw.txt > Filters/tmp_body_clean.txt

          # 重複行を除外
          awk '!seen[$0]++' Filters/tmp_body_clean.txt > Filters/tmp_body.txt

          # ヘッダと整形済みの本体を結合
          cat Filters/tmp_head.txt Filters/tmp_body.txt > Filters/main_filter.txt

          # 一時ファイル削除
          rm Filters/tmp_head.txt Filters/tmp_body_raw.txt Filters/tmp_body_clean.txt Filters/tmp_body.txt
          
      - name: Insert Version info in JST
        run: |
          VERSION_LINE="! Version: $(TZ=Asia/Tokyo date '+%Y-%m-%d %H:%M JST')"
          awk -v ver="$VERSION_LINE" '
            /^! Description:/ { print; print ver; next }
            { print }
          ' Filters/main_filter.txt > Filters/tmp_main.txt
          mv Filters/tmp_main.txt Filters/main_filter.txt
          
      - name: Upload new filter
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add Filters/*.txt
          git commit -m "Updated filter successfully generated."
          git push origin master
