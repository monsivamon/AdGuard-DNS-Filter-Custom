name: Build Filter & modify

on:
  push:
  schedule:
    - cron: '0 */6 * * *' # Every 6th hour
  workflow_dispatch:

env:
  NODE_VERSION: 18.x

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}

      # ビルドで使う最新フィルタを取得（生URL指定だとソースが長くなる為）
      - name: Get Latest File
        run: |
          # Adguard 公式フィルタを取得
          curl -sSfL https://raw.githubusercontent.com/AdguardTeam/AdGuardSDNSFilter/master/Filters/exclusions.txt -o Filters/exclusions.txt
          curl -sSfL https://raw.githubusercontent.com/AdguardTeam/AdGuardSDNSFilter/master/Filters/exceptions.txt -o Filters/exceptions.txt
          curl -sSfL https://raw.githubusercontent.com/AdguardTeam/AdGuardSDNSFilter/master/Filters/rules.txt -o Filters/rules.txt
          # Yuki2718氏のフィルタも取得
          curl -sSfL https://raw.githubusercontent.com/Yuki2718/adblock2/main/japanese/dns-unbreak.txt -o Filters/dns-unbreak.txt
           
      # フィルタビルド実行
      - name: Build Filter
        run: |
          # 依存関係を最新にアップグレード
          yarn upgrade
          # 依存関係をインストール
          yarn install
          # コマンドコケたらスクリプト停止
          set -e
          # フィルタビルド実行
          ./node_modules/.bin/hostlist-compiler -c configuration.json -o Filters/main_filter.txt --verbose
      
      # 生成フィルタそのままから弄る
      - name: Clean up main_filter.txt
        run: |
        
          # 元ファイルをバックアップ
          cp Filters/main_filter.txt Filters/before_modify.txt

          # awkでフィルタ整形
          awk '
          # 2~7行目をそのまま書き出す
          NR >= 2 && NR <= 7 {
             print
             next
          }
          #コメント行を除外し、フィルタ形式の行のみ対象
          !/^!/ && (/^\|\||^@@/) {
            # $important 以外の修飾子削除
            if ($0 ~ /\$.*$/ && $0 !~ /\$important$/) {
             sub(/\$.*$/, "", $0)
            }
            # @@は無条件で許可、それ以外でtracking系ワード含むものは除外
            if ($0 ~ /^@@/ || $0 !~ /tracking|tracker|analytics/) {
              # 重複ではないことを確認
              if (!seen[$0]++) {
                print
              }
            }
          } ' Filters/main_filter.txt > Filters/tmp_filter.txt
          
          # 上書き実行
          mv Filters/tmp_filter.txt Filters/main_filter.txt
          
      # ビルドした日時をVersionとして追記
      - name: Insert Ver INFO
        run: |
        
          # 現在の日付と時間をJST形式で取得
          TODAY="$(TZ=Asia/Tokyo date '+%Y-%m-%d %H:%M JST')"

          awk -v ver="! Version: ${TODAY}" '
          {
            # それ以外は普通に出力
            print
            # 3行目に追記
            if (NR == 2) {
              print ver 
            }
          } ' Filters/main_filter.txt > Filters/tmp_filter.txt

          # 上書き実行
          mv Filters/tmp_filter.txt Filters/main_filter.txt
        
      # フィルタをアップロード
      - name: Upload new filter
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add Filters/*.txt
          git commit -m "Updated filter successfully generated."
          git push origin master
