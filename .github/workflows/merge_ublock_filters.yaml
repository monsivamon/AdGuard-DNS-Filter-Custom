name: Merge Ublock_Filter

on:
  schedule:
    # 8H事に自動実行
    - cron: '3 22,6,14 * * *'
    
  # 手動実行を許可
  workflow_dispatch:
  
permissions:
  contents: write
  
env:
  NODE_VERSION: 18.x
  OUTPUT_FILE: Filters/ublock_filters_merge.txt
  
jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        with:
          persist-credentials: true 
          
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          
      - name: Create Ublock Filter
        run: |
          # 各種変数の設定
          BASE_URL="https://raw.githubusercontent.com/uBlockOrigin/uAssets/master/filters"
          WORK_DIR="Filters/tmp_dir"

          # 作業用ディレクトリ作成＆初期化
          mkdir -p "$WORK_DIR"
          rm -f "$OUTPUT_FILE"

          # filters.txt を取得
          curl -sf "${BASE_URL}/filters.txt" -o "$WORK_DIR/filters.txt"

          # filters.txtの中の!#include行からファイル名を抽出
          includes=$(grep '^!#include ' "$WORK_DIR/filters.txt" | awk '{print $2}')

          # それをループでダウンロード
          for file in $includes; do
            curl -sf "${BASE_URL}/${file}" -o "$WORK_DIR/${file}"
            echo "download ${file}"
          done
          
          # JST現在時刻取得
          TIMESTAMP=$(TZ=Asia/Tokyo date '+%Y-%m-%d %H:%M:%S JST')

          # tmp_dir内のファイル名を配列に取得
          mapfile -t includes < <(ls Filters/tmp_dir)

          # 配列をカンマ区切りの文字列に変換
          includes_str=$(IFS=,; echo "${includes[*]}")

          awk -v ts="$TIMESTAMP" -v dir="Filters/tmp_dir" -v includes="$includes_str" '
          BEGIN {
            n = split(includes, arr, ",")
          }
          NR == 2 {
            print "! Last modified: " ts
            next
          }
          /^! Last modified:/ {
            next
          }
          {
            for (i = 1; i <= n; i++) {
              if ($0 == "!#include " arr[i]) {
                fname = dir "/" arr[i]
                print ""
                print "!# Begin include: " fname
                print ""
                while ((getline line < fname) > 0) print line
                  if (line ~ /^! (Title|Description|Last modified):/) next
                  print ""
                  print "!# End include: " fname
                  print ""
                close(fname)
                next
              }
            }
            if ($0 ~ /^!#if env_mobile$/ || $0 ~ /^!#endif$/) {
              next
            }
            print
          }
          ' "Filters/tmp_dir/filters.txt" > "$OUTPUT_FILE"

      # フィルタをアップロード
      - name: Upload new filter
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          TODAY="$(TZ=Asia/Tokyo date '+%Y-%m-%d %H:%M JST')"
          if [ -s "$OUTPUT_FILE" ]; then
            git add "$OUTPUT_FILE"
            git commit -m "chore: update ublock filter - ${TODAY}"
            git push origin master
          else
            echo "ERROR: ${OUTPUT_FILE} is empty or missing. Skip commit."
          fi

